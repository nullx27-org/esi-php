<?php
/**
 * GetCharactersCharacterIdStatsMarket
 *
 * PHP version 5
 *
 * @category Class
 * @package  nullx27\ESI
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace nullx27\ESI\nullx27\ESI\Models;

use \ArrayAccess;
use \nullx27\ESI\ObjectSerializer;

/**
 * GetCharactersCharacterIdStatsMarket Class Doc Comment
 *
 * @category Class
 * @description market object
 * @package  nullx27\ESI
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GetCharactersCharacterIdStatsMarket implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'get_characters_character_id_stats_market';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'acceptContractsCourier' => 'int',
        'acceptContractsItemExchange' => 'int',
        'buyOrdersPlaced' => 'int',
        'cancelMarketOrder' => 'int',
        'createContractsAuction' => 'int',
        'createContractsCourier' => 'int',
        'createContractsItemExchange' => 'int',
        'deliverCourierContract' => 'int',
        'iskGained' => 'int',
        'iskSpent' => 'int',
        'modifyMarketOrder' => 'int',
        'searchContracts' => 'int',
        'sellOrdersPlaced' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'acceptContractsCourier' => 'int64',
        'acceptContractsItemExchange' => 'int64',
        'buyOrdersPlaced' => 'int64',
        'cancelMarketOrder' => 'int64',
        'createContractsAuction' => 'int64',
        'createContractsCourier' => 'int64',
        'createContractsItemExchange' => 'int64',
        'deliverCourierContract' => 'int64',
        'iskGained' => 'int64',
        'iskSpent' => 'int64',
        'modifyMarketOrder' => 'int64',
        'searchContracts' => 'int64',
        'sellOrdersPlaced' => 'int64'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'acceptContractsCourier' => 'accept_contracts_courier',
        'acceptContractsItemExchange' => 'accept_contracts_item_exchange',
        'buyOrdersPlaced' => 'buy_orders_placed',
        'cancelMarketOrder' => 'cancel_market_order',
        'createContractsAuction' => 'create_contracts_auction',
        'createContractsCourier' => 'create_contracts_courier',
        'createContractsItemExchange' => 'create_contracts_item_exchange',
        'deliverCourierContract' => 'deliver_courier_contract',
        'iskGained' => 'isk_gained',
        'iskSpent' => 'isk_spent',
        'modifyMarketOrder' => 'modify_market_order',
        'searchContracts' => 'search_contracts',
        'sellOrdersPlaced' => 'sell_orders_placed'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'acceptContractsCourier' => 'setAcceptContractsCourier',
        'acceptContractsItemExchange' => 'setAcceptContractsItemExchange',
        'buyOrdersPlaced' => 'setBuyOrdersPlaced',
        'cancelMarketOrder' => 'setCancelMarketOrder',
        'createContractsAuction' => 'setCreateContractsAuction',
        'createContractsCourier' => 'setCreateContractsCourier',
        'createContractsItemExchange' => 'setCreateContractsItemExchange',
        'deliverCourierContract' => 'setDeliverCourierContract',
        'iskGained' => 'setIskGained',
        'iskSpent' => 'setIskSpent',
        'modifyMarketOrder' => 'setModifyMarketOrder',
        'searchContracts' => 'setSearchContracts',
        'sellOrdersPlaced' => 'setSellOrdersPlaced'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'acceptContractsCourier' => 'getAcceptContractsCourier',
        'acceptContractsItemExchange' => 'getAcceptContractsItemExchange',
        'buyOrdersPlaced' => 'getBuyOrdersPlaced',
        'cancelMarketOrder' => 'getCancelMarketOrder',
        'createContractsAuction' => 'getCreateContractsAuction',
        'createContractsCourier' => 'getCreateContractsCourier',
        'createContractsItemExchange' => 'getCreateContractsItemExchange',
        'deliverCourierContract' => 'getDeliverCourierContract',
        'iskGained' => 'getIskGained',
        'iskSpent' => 'getIskSpent',
        'modifyMarketOrder' => 'getModifyMarketOrder',
        'searchContracts' => 'getSearchContracts',
        'sellOrdersPlaced' => 'getSellOrdersPlaced'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['acceptContractsCourier'] = isset($data['acceptContractsCourier']) ? $data['acceptContractsCourier'] : null;
        $this->container['acceptContractsItemExchange'] = isset($data['acceptContractsItemExchange']) ? $data['acceptContractsItemExchange'] : null;
        $this->container['buyOrdersPlaced'] = isset($data['buyOrdersPlaced']) ? $data['buyOrdersPlaced'] : null;
        $this->container['cancelMarketOrder'] = isset($data['cancelMarketOrder']) ? $data['cancelMarketOrder'] : null;
        $this->container['createContractsAuction'] = isset($data['createContractsAuction']) ? $data['createContractsAuction'] : null;
        $this->container['createContractsCourier'] = isset($data['createContractsCourier']) ? $data['createContractsCourier'] : null;
        $this->container['createContractsItemExchange'] = isset($data['createContractsItemExchange']) ? $data['createContractsItemExchange'] : null;
        $this->container['deliverCourierContract'] = isset($data['deliverCourierContract']) ? $data['deliverCourierContract'] : null;
        $this->container['iskGained'] = isset($data['iskGained']) ? $data['iskGained'] : null;
        $this->container['iskSpent'] = isset($data['iskSpent']) ? $data['iskSpent'] : null;
        $this->container['modifyMarketOrder'] = isset($data['modifyMarketOrder']) ? $data['modifyMarketOrder'] : null;
        $this->container['searchContracts'] = isset($data['searchContracts']) ? $data['searchContracts'] : null;
        $this->container['sellOrdersPlaced'] = isset($data['sellOrdersPlaced']) ? $data['sellOrdersPlaced'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets acceptContractsCourier
     *
     * @return int
     */
    public function getAcceptContractsCourier()
    {
        return $this->container['acceptContractsCourier'];
    }

    /**
     * Sets acceptContractsCourier
     *
     * @param int $acceptContractsCourier accept_contracts_courier integer
     *
     * @return $this
     */
    public function setAcceptContractsCourier($acceptContractsCourier)
    {
        $this->container['acceptContractsCourier'] = $acceptContractsCourier;

        return $this;
    }

    /**
     * Gets acceptContractsItemExchange
     *
     * @return int
     */
    public function getAcceptContractsItemExchange()
    {
        return $this->container['acceptContractsItemExchange'];
    }

    /**
     * Sets acceptContractsItemExchange
     *
     * @param int $acceptContractsItemExchange accept_contracts_item_exchange integer
     *
     * @return $this
     */
    public function setAcceptContractsItemExchange($acceptContractsItemExchange)
    {
        $this->container['acceptContractsItemExchange'] = $acceptContractsItemExchange;

        return $this;
    }

    /**
     * Gets buyOrdersPlaced
     *
     * @return int
     */
    public function getBuyOrdersPlaced()
    {
        return $this->container['buyOrdersPlaced'];
    }

    /**
     * Sets buyOrdersPlaced
     *
     * @param int $buyOrdersPlaced buy_orders_placed integer
     *
     * @return $this
     */
    public function setBuyOrdersPlaced($buyOrdersPlaced)
    {
        $this->container['buyOrdersPlaced'] = $buyOrdersPlaced;

        return $this;
    }

    /**
     * Gets cancelMarketOrder
     *
     * @return int
     */
    public function getCancelMarketOrder()
    {
        return $this->container['cancelMarketOrder'];
    }

    /**
     * Sets cancelMarketOrder
     *
     * @param int $cancelMarketOrder cancel_market_order integer
     *
     * @return $this
     */
    public function setCancelMarketOrder($cancelMarketOrder)
    {
        $this->container['cancelMarketOrder'] = $cancelMarketOrder;

        return $this;
    }

    /**
     * Gets createContractsAuction
     *
     * @return int
     */
    public function getCreateContractsAuction()
    {
        return $this->container['createContractsAuction'];
    }

    /**
     * Sets createContractsAuction
     *
     * @param int $createContractsAuction create_contracts_auction integer
     *
     * @return $this
     */
    public function setCreateContractsAuction($createContractsAuction)
    {
        $this->container['createContractsAuction'] = $createContractsAuction;

        return $this;
    }

    /**
     * Gets createContractsCourier
     *
     * @return int
     */
    public function getCreateContractsCourier()
    {
        return $this->container['createContractsCourier'];
    }

    /**
     * Sets createContractsCourier
     *
     * @param int $createContractsCourier create_contracts_courier integer
     *
     * @return $this
     */
    public function setCreateContractsCourier($createContractsCourier)
    {
        $this->container['createContractsCourier'] = $createContractsCourier;

        return $this;
    }

    /**
     * Gets createContractsItemExchange
     *
     * @return int
     */
    public function getCreateContractsItemExchange()
    {
        return $this->container['createContractsItemExchange'];
    }

    /**
     * Sets createContractsItemExchange
     *
     * @param int $createContractsItemExchange create_contracts_item_exchange integer
     *
     * @return $this
     */
    public function setCreateContractsItemExchange($createContractsItemExchange)
    {
        $this->container['createContractsItemExchange'] = $createContractsItemExchange;

        return $this;
    }

    /**
     * Gets deliverCourierContract
     *
     * @return int
     */
    public function getDeliverCourierContract()
    {
        return $this->container['deliverCourierContract'];
    }

    /**
     * Sets deliverCourierContract
     *
     * @param int $deliverCourierContract deliver_courier_contract integer
     *
     * @return $this
     */
    public function setDeliverCourierContract($deliverCourierContract)
    {
        $this->container['deliverCourierContract'] = $deliverCourierContract;

        return $this;
    }

    /**
     * Gets iskGained
     *
     * @return int
     */
    public function getIskGained()
    {
        return $this->container['iskGained'];
    }

    /**
     * Sets iskGained
     *
     * @param int $iskGained isk_gained integer
     *
     * @return $this
     */
    public function setIskGained($iskGained)
    {
        $this->container['iskGained'] = $iskGained;

        return $this;
    }

    /**
     * Gets iskSpent
     *
     * @return int
     */
    public function getIskSpent()
    {
        return $this->container['iskSpent'];
    }

    /**
     * Sets iskSpent
     *
     * @param int $iskSpent isk_spent integer
     *
     * @return $this
     */
    public function setIskSpent($iskSpent)
    {
        $this->container['iskSpent'] = $iskSpent;

        return $this;
    }

    /**
     * Gets modifyMarketOrder
     *
     * @return int
     */
    public function getModifyMarketOrder()
    {
        return $this->container['modifyMarketOrder'];
    }

    /**
     * Sets modifyMarketOrder
     *
     * @param int $modifyMarketOrder modify_market_order integer
     *
     * @return $this
     */
    public function setModifyMarketOrder($modifyMarketOrder)
    {
        $this->container['modifyMarketOrder'] = $modifyMarketOrder;

        return $this;
    }

    /**
     * Gets searchContracts
     *
     * @return int
     */
    public function getSearchContracts()
    {
        return $this->container['searchContracts'];
    }

    /**
     * Sets searchContracts
     *
     * @param int $searchContracts search_contracts integer
     *
     * @return $this
     */
    public function setSearchContracts($searchContracts)
    {
        $this->container['searchContracts'] = $searchContracts;

        return $this;
    }

    /**
     * Gets sellOrdersPlaced
     *
     * @return int
     */
    public function getSellOrdersPlaced()
    {
        return $this->container['sellOrdersPlaced'];
    }

    /**
     * Sets sellOrdersPlaced
     *
     * @param int $sellOrdersPlaced sell_orders_placed integer
     *
     * @return $this
     */
    public function setSellOrdersPlaced($sellOrdersPlaced)
    {
        $this->container['sellOrdersPlaced'] = $sellOrdersPlaced;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


