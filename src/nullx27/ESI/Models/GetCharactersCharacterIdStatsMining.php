<?php
/**
 * GetCharactersCharacterIdStatsMining
 *
 * PHP version 5
 *
 * @category Class
 * @package  nullx27\ESI
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * EVE Swagger Interface
 *
 * An OpenAPI for EVE Online
 *
 * OpenAPI spec version: 0.7.3
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace nullx27\ESI\nullx27\ESI\Models;

use \ArrayAccess;
use \nullx27\ESI\ObjectSerializer;

/**
 * GetCharactersCharacterIdStatsMining Class Doc Comment
 *
 * @category Class
 * @description mining object
 * @package  nullx27\ESI
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class GetCharactersCharacterIdStatsMining implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'get_characters_character_id_stats_mining';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'droneMine' => 'int',
        'oreArkonor' => 'int',
        'oreBistot' => 'int',
        'oreCrokite' => 'int',
        'oreDarkOchre' => 'int',
        'oreGneiss' => 'int',
        'oreHarvestableCloud' => 'int',
        'oreHedbergite' => 'int',
        'oreHemorphite' => 'int',
        'oreIce' => 'int',
        'oreJaspet' => 'int',
        'oreKernite' => 'int',
        'oreMercoxit' => 'int',
        'oreOmber' => 'int',
        'orePlagioclase' => 'int',
        'orePyroxeres' => 'int',
        'oreScordite' => 'int',
        'oreSpodumain' => 'int',
        'oreVeldspar' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'droneMine' => 'int64',
        'oreArkonor' => 'int64',
        'oreBistot' => 'int64',
        'oreCrokite' => 'int64',
        'oreDarkOchre' => 'int64',
        'oreGneiss' => 'int64',
        'oreHarvestableCloud' => 'int64',
        'oreHedbergite' => 'int64',
        'oreHemorphite' => 'int64',
        'oreIce' => 'int64',
        'oreJaspet' => 'int64',
        'oreKernite' => 'int64',
        'oreMercoxit' => 'int64',
        'oreOmber' => 'int64',
        'orePlagioclase' => 'int64',
        'orePyroxeres' => 'int64',
        'oreScordite' => 'int64',
        'oreSpodumain' => 'int64',
        'oreVeldspar' => 'int64'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'droneMine' => 'drone_mine',
        'oreArkonor' => 'ore_arkonor',
        'oreBistot' => 'ore_bistot',
        'oreCrokite' => 'ore_crokite',
        'oreDarkOchre' => 'ore_dark_ochre',
        'oreGneiss' => 'ore_gneiss',
        'oreHarvestableCloud' => 'ore_harvestable_cloud',
        'oreHedbergite' => 'ore_hedbergite',
        'oreHemorphite' => 'ore_hemorphite',
        'oreIce' => 'ore_ice',
        'oreJaspet' => 'ore_jaspet',
        'oreKernite' => 'ore_kernite',
        'oreMercoxit' => 'ore_mercoxit',
        'oreOmber' => 'ore_omber',
        'orePlagioclase' => 'ore_plagioclase',
        'orePyroxeres' => 'ore_pyroxeres',
        'oreScordite' => 'ore_scordite',
        'oreSpodumain' => 'ore_spodumain',
        'oreVeldspar' => 'ore_veldspar'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'droneMine' => 'setDroneMine',
        'oreArkonor' => 'setOreArkonor',
        'oreBistot' => 'setOreBistot',
        'oreCrokite' => 'setOreCrokite',
        'oreDarkOchre' => 'setOreDarkOchre',
        'oreGneiss' => 'setOreGneiss',
        'oreHarvestableCloud' => 'setOreHarvestableCloud',
        'oreHedbergite' => 'setOreHedbergite',
        'oreHemorphite' => 'setOreHemorphite',
        'oreIce' => 'setOreIce',
        'oreJaspet' => 'setOreJaspet',
        'oreKernite' => 'setOreKernite',
        'oreMercoxit' => 'setOreMercoxit',
        'oreOmber' => 'setOreOmber',
        'orePlagioclase' => 'setOrePlagioclase',
        'orePyroxeres' => 'setOrePyroxeres',
        'oreScordite' => 'setOreScordite',
        'oreSpodumain' => 'setOreSpodumain',
        'oreVeldspar' => 'setOreVeldspar'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'droneMine' => 'getDroneMine',
        'oreArkonor' => 'getOreArkonor',
        'oreBistot' => 'getOreBistot',
        'oreCrokite' => 'getOreCrokite',
        'oreDarkOchre' => 'getOreDarkOchre',
        'oreGneiss' => 'getOreGneiss',
        'oreHarvestableCloud' => 'getOreHarvestableCloud',
        'oreHedbergite' => 'getOreHedbergite',
        'oreHemorphite' => 'getOreHemorphite',
        'oreIce' => 'getOreIce',
        'oreJaspet' => 'getOreJaspet',
        'oreKernite' => 'getOreKernite',
        'oreMercoxit' => 'getOreMercoxit',
        'oreOmber' => 'getOreOmber',
        'orePlagioclase' => 'getOrePlagioclase',
        'orePyroxeres' => 'getOrePyroxeres',
        'oreScordite' => 'getOreScordite',
        'oreSpodumain' => 'getOreSpodumain',
        'oreVeldspar' => 'getOreVeldspar'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['droneMine'] = isset($data['droneMine']) ? $data['droneMine'] : null;
        $this->container['oreArkonor'] = isset($data['oreArkonor']) ? $data['oreArkonor'] : null;
        $this->container['oreBistot'] = isset($data['oreBistot']) ? $data['oreBistot'] : null;
        $this->container['oreCrokite'] = isset($data['oreCrokite']) ? $data['oreCrokite'] : null;
        $this->container['oreDarkOchre'] = isset($data['oreDarkOchre']) ? $data['oreDarkOchre'] : null;
        $this->container['oreGneiss'] = isset($data['oreGneiss']) ? $data['oreGneiss'] : null;
        $this->container['oreHarvestableCloud'] = isset($data['oreHarvestableCloud']) ? $data['oreHarvestableCloud'] : null;
        $this->container['oreHedbergite'] = isset($data['oreHedbergite']) ? $data['oreHedbergite'] : null;
        $this->container['oreHemorphite'] = isset($data['oreHemorphite']) ? $data['oreHemorphite'] : null;
        $this->container['oreIce'] = isset($data['oreIce']) ? $data['oreIce'] : null;
        $this->container['oreJaspet'] = isset($data['oreJaspet']) ? $data['oreJaspet'] : null;
        $this->container['oreKernite'] = isset($data['oreKernite']) ? $data['oreKernite'] : null;
        $this->container['oreMercoxit'] = isset($data['oreMercoxit']) ? $data['oreMercoxit'] : null;
        $this->container['oreOmber'] = isset($data['oreOmber']) ? $data['oreOmber'] : null;
        $this->container['orePlagioclase'] = isset($data['orePlagioclase']) ? $data['orePlagioclase'] : null;
        $this->container['orePyroxeres'] = isset($data['orePyroxeres']) ? $data['orePyroxeres'] : null;
        $this->container['oreScordite'] = isset($data['oreScordite']) ? $data['oreScordite'] : null;
        $this->container['oreSpodumain'] = isset($data['oreSpodumain']) ? $data['oreSpodumain'] : null;
        $this->container['oreVeldspar'] = isset($data['oreVeldspar']) ? $data['oreVeldspar'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets droneMine
     *
     * @return int
     */
    public function getDroneMine()
    {
        return $this->container['droneMine'];
    }

    /**
     * Sets droneMine
     *
     * @param int $droneMine drone_mine integer
     *
     * @return $this
     */
    public function setDroneMine($droneMine)
    {
        $this->container['droneMine'] = $droneMine;

        return $this;
    }

    /**
     * Gets oreArkonor
     *
     * @return int
     */
    public function getOreArkonor()
    {
        return $this->container['oreArkonor'];
    }

    /**
     * Sets oreArkonor
     *
     * @param int $oreArkonor ore_arkonor integer
     *
     * @return $this
     */
    public function setOreArkonor($oreArkonor)
    {
        $this->container['oreArkonor'] = $oreArkonor;

        return $this;
    }

    /**
     * Gets oreBistot
     *
     * @return int
     */
    public function getOreBistot()
    {
        return $this->container['oreBistot'];
    }

    /**
     * Sets oreBistot
     *
     * @param int $oreBistot ore_bistot integer
     *
     * @return $this
     */
    public function setOreBistot($oreBistot)
    {
        $this->container['oreBistot'] = $oreBistot;

        return $this;
    }

    /**
     * Gets oreCrokite
     *
     * @return int
     */
    public function getOreCrokite()
    {
        return $this->container['oreCrokite'];
    }

    /**
     * Sets oreCrokite
     *
     * @param int $oreCrokite ore_crokite integer
     *
     * @return $this
     */
    public function setOreCrokite($oreCrokite)
    {
        $this->container['oreCrokite'] = $oreCrokite;

        return $this;
    }

    /**
     * Gets oreDarkOchre
     *
     * @return int
     */
    public function getOreDarkOchre()
    {
        return $this->container['oreDarkOchre'];
    }

    /**
     * Sets oreDarkOchre
     *
     * @param int $oreDarkOchre ore_dark_ochre integer
     *
     * @return $this
     */
    public function setOreDarkOchre($oreDarkOchre)
    {
        $this->container['oreDarkOchre'] = $oreDarkOchre;

        return $this;
    }

    /**
     * Gets oreGneiss
     *
     * @return int
     */
    public function getOreGneiss()
    {
        return $this->container['oreGneiss'];
    }

    /**
     * Sets oreGneiss
     *
     * @param int $oreGneiss ore_gneiss integer
     *
     * @return $this
     */
    public function setOreGneiss($oreGneiss)
    {
        $this->container['oreGneiss'] = $oreGneiss;

        return $this;
    }

    /**
     * Gets oreHarvestableCloud
     *
     * @return int
     */
    public function getOreHarvestableCloud()
    {
        return $this->container['oreHarvestableCloud'];
    }

    /**
     * Sets oreHarvestableCloud
     *
     * @param int $oreHarvestableCloud ore_harvestable_cloud integer
     *
     * @return $this
     */
    public function setOreHarvestableCloud($oreHarvestableCloud)
    {
        $this->container['oreHarvestableCloud'] = $oreHarvestableCloud;

        return $this;
    }

    /**
     * Gets oreHedbergite
     *
     * @return int
     */
    public function getOreHedbergite()
    {
        return $this->container['oreHedbergite'];
    }

    /**
     * Sets oreHedbergite
     *
     * @param int $oreHedbergite ore_hedbergite integer
     *
     * @return $this
     */
    public function setOreHedbergite($oreHedbergite)
    {
        $this->container['oreHedbergite'] = $oreHedbergite;

        return $this;
    }

    /**
     * Gets oreHemorphite
     *
     * @return int
     */
    public function getOreHemorphite()
    {
        return $this->container['oreHemorphite'];
    }

    /**
     * Sets oreHemorphite
     *
     * @param int $oreHemorphite ore_hemorphite integer
     *
     * @return $this
     */
    public function setOreHemorphite($oreHemorphite)
    {
        $this->container['oreHemorphite'] = $oreHemorphite;

        return $this;
    }

    /**
     * Gets oreIce
     *
     * @return int
     */
    public function getOreIce()
    {
        return $this->container['oreIce'];
    }

    /**
     * Sets oreIce
     *
     * @param int $oreIce ore_ice integer
     *
     * @return $this
     */
    public function setOreIce($oreIce)
    {
        $this->container['oreIce'] = $oreIce;

        return $this;
    }

    /**
     * Gets oreJaspet
     *
     * @return int
     */
    public function getOreJaspet()
    {
        return $this->container['oreJaspet'];
    }

    /**
     * Sets oreJaspet
     *
     * @param int $oreJaspet ore_jaspet integer
     *
     * @return $this
     */
    public function setOreJaspet($oreJaspet)
    {
        $this->container['oreJaspet'] = $oreJaspet;

        return $this;
    }

    /**
     * Gets oreKernite
     *
     * @return int
     */
    public function getOreKernite()
    {
        return $this->container['oreKernite'];
    }

    /**
     * Sets oreKernite
     *
     * @param int $oreKernite ore_kernite integer
     *
     * @return $this
     */
    public function setOreKernite($oreKernite)
    {
        $this->container['oreKernite'] = $oreKernite;

        return $this;
    }

    /**
     * Gets oreMercoxit
     *
     * @return int
     */
    public function getOreMercoxit()
    {
        return $this->container['oreMercoxit'];
    }

    /**
     * Sets oreMercoxit
     *
     * @param int $oreMercoxit ore_mercoxit integer
     *
     * @return $this
     */
    public function setOreMercoxit($oreMercoxit)
    {
        $this->container['oreMercoxit'] = $oreMercoxit;

        return $this;
    }

    /**
     * Gets oreOmber
     *
     * @return int
     */
    public function getOreOmber()
    {
        return $this->container['oreOmber'];
    }

    /**
     * Sets oreOmber
     *
     * @param int $oreOmber ore_omber integer
     *
     * @return $this
     */
    public function setOreOmber($oreOmber)
    {
        $this->container['oreOmber'] = $oreOmber;

        return $this;
    }

    /**
     * Gets orePlagioclase
     *
     * @return int
     */
    public function getOrePlagioclase()
    {
        return $this->container['orePlagioclase'];
    }

    /**
     * Sets orePlagioclase
     *
     * @param int $orePlagioclase ore_plagioclase integer
     *
     * @return $this
     */
    public function setOrePlagioclase($orePlagioclase)
    {
        $this->container['orePlagioclase'] = $orePlagioclase;

        return $this;
    }

    /**
     * Gets orePyroxeres
     *
     * @return int
     */
    public function getOrePyroxeres()
    {
        return $this->container['orePyroxeres'];
    }

    /**
     * Sets orePyroxeres
     *
     * @param int $orePyroxeres ore_pyroxeres integer
     *
     * @return $this
     */
    public function setOrePyroxeres($orePyroxeres)
    {
        $this->container['orePyroxeres'] = $orePyroxeres;

        return $this;
    }

    /**
     * Gets oreScordite
     *
     * @return int
     */
    public function getOreScordite()
    {
        return $this->container['oreScordite'];
    }

    /**
     * Sets oreScordite
     *
     * @param int $oreScordite ore_scordite integer
     *
     * @return $this
     */
    public function setOreScordite($oreScordite)
    {
        $this->container['oreScordite'] = $oreScordite;

        return $this;
    }

    /**
     * Gets oreSpodumain
     *
     * @return int
     */
    public function getOreSpodumain()
    {
        return $this->container['oreSpodumain'];
    }

    /**
     * Sets oreSpodumain
     *
     * @param int $oreSpodumain ore_spodumain integer
     *
     * @return $this
     */
    public function setOreSpodumain($oreSpodumain)
    {
        $this->container['oreSpodumain'] = $oreSpodumain;

        return $this;
    }

    /**
     * Gets oreVeldspar
     *
     * @return int
     */
    public function getOreVeldspar()
    {
        return $this->container['oreVeldspar'];
    }

    /**
     * Sets oreVeldspar
     *
     * @param int $oreVeldspar ore_veldspar integer
     *
     * @return $this
     */
    public function setOreVeldspar($oreVeldspar)
    {
        $this->container['oreVeldspar'] = $oreVeldspar;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


